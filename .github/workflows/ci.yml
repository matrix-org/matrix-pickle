name: CI

on:
  push:
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  style:
    name: Check style
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v3

    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: rustfmt
        profile: minimal
        override: true

    - name: Cargo fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  typos:
    name: Spell Check with Typos
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Actions Repository
      uses: actions/checkout@v3

    - name: Check the spelling of the files in our repo
      uses: crate-ci/typos@master

  clippy:
    name: Run clippy
    needs: [style]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v3

    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: clippy
        profile: minimal
        override: true

    - uses: Swatinem/rust-cache@v2

    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets -- -D warnings

  test:
    name: ${{ matrix.target.name }}
    needs: [clippy]

    runs-on: ${{ matrix.target.os }}
    strategy:
      matrix:
        target: [
          { "os": "ubuntu-latest",  "name": "Linux GNU" },
          { "os": "macOS-latest",   "name": "macOS" },
          { "os": "windows-latest", "name": "Windows MSVC" },
        ]
        channel: [stable, beta, nightly]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features
